@model IEnumerable<MatchHistoryRecord>

@{
    var totalPages = (int)ViewData["TotalPages"]!;
    var currentPage = (int)ViewData["CurrentPage"]!;
    var filter = ViewData["Filter"]?.ToString() ?? "";
}

<h1>Matches</h1>

<div class="search-panel">
    <form action="/matches" method="get">
        <label for="search">Filter: </label>
        <input type="text" id="search" name="filter_by_player_name" placeholder="Enter player name..." value="@(filter == "" ? null : filter)">
        <button type="submit">Apply</button>
    </form>
    <form action="/matches" method="get">
        <button type="submit">Reset</button>
    </form>
</div>

<table>
    <thead>
        <tr>
            <th>First Player</th>
            <th>Second Player</th>
            <th>Winner</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var record in Model) {
            <tr>
                <td>@record.FirstPlayerName</td>
                <td>@record.SecondPlayerName</td>
                <td>@record.WinnerName</td>
            </tr>
        }
    </tbody>
</table>

<div class="pagination">
    @if (currentPage > 1) {
        <a href="@Url.Action("GetMatches", new { page = currentPage - 1, filter_by_player_name = filter })">Previous</a>
    }
    @for (int i = 1; i <= totalPages; i++) {
        <a href="@Url.Action("GetMatches", new { page = i, filter_by_player_name = filter })" class="@(i == currentPage ? "active" : "")">@i</a>
    }
    @if (currentPage < totalPages) {
        <a href="@Url.Action("GetMatches", new { page = currentPage + 1, filter_by_player_name = filter })">Next</a>
    }
</div>

<a asp-action="Index" asp-controller="Home">Go to homepage</a>